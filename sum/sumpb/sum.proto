syntax ="proto3";

package sum;

option go_package="sumpb";

message Sum{
    int32 a =1;
    int32 b =2;
}

message SumRequest{
    Sum sum =1;
}

message SumResponse{
    int32 result=1;
}

message PrimeNumberDecompositionRequest{
    int64 number=1;
}

message PrimeNumberDecompositionResponse{
    int64 prime_factor=1;
}

message ComputeAverageRequest{
    int64 number=1;
}
message ComputeAverageResponse{
    double result=1;
}

message FindMaximumRequest{
    int32 number=1;
}
message FindMaximumResponse{
    int32 maximum=1;
}

message SquareRootResquest{
    int32 number=1;
}

message SquareRootResponse{
    double number_root = 1;
}

service SumService{
    //Unary 
    rpc Sum(SumRequest) returns (SumResponse) {};

    //Server Streaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

    //Client Streaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    //Bidi streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){};

    rpc SquareRoot(SquareRootResquest) returns (SquareRootResponse){};
}


